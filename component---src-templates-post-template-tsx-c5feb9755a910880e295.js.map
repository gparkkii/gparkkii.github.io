{"version":3,"file":"component---src-templates-post-template-tsx-c5feb9755a910880e295.js","mappings":"6PAWA,MAAMA,GAAYC,EAAAA,EAAAA,GAAA,OAAAC,OAAA,aAAAD,CAAA,yFAOdE,EAAAA,GAAAA,GAAa,yBAyBjB,MApBoBC,IAA4C,IAA3C,UAAEC,EAAS,KAAEC,GAAwBF,EACxD,OACEG,EAAAA,EAAAA,IAAAC,EAAAA,SAAA,MACED,EAAAA,EAAAA,IAACP,EAAY,MACXO,EAAAA,EAAAA,IAACE,EAAAA,EAAW,CACVC,MAAO,CACLC,OAAQ,QACRC,UAAW,UACXC,aAAc,QAEhBC,QAAQ,OACRC,MAAOV,EACPW,IAAI,gBAGRT,EAAAA,EAAAA,IAACU,EAAAA,EAAgB,CAACC,wBAAyB,CAAEC,OAAQb,KACpD,E,UCwBP,MAzC2D,SAAAF,GAKrC,IAL+C,KACnEgB,EAAI,KACJC,EAAI,YACJC,EAAW,SACXC,GACkBnB,EAClB,MACEoB,MAAM,KACJlB,EACAmB,aAAa,MACXC,EAAK,QACLC,EAAO,KACPC,EAAI,KACJC,EACAxB,WACEyB,iBAAiB,gBAAEC,GAAiB,UACpCC,MAIJX,EAAKY,kBAAkBC,MAAM,GAEjC,OACE3B,EAAAA,EAAAA,IAAC4B,EAAAA,EAAU,CACTf,KAAM,IACNgB,KAAM,CACJV,QACAW,YAAaV,EACbW,IAAKf,EAASgB,KACdxB,MAAOiB,KAGTzB,EAAAA,EAAAA,IAACiC,EAAAA,EAAU,MACTjC,EAAAA,EAAAA,IAACkC,EAAAA,EAAW,CAACf,MAAOA,EAAOE,KAAMA,KACjCrB,EAAAA,EAAAA,IAACmC,EAAW,CAACpC,KAAMA,EAAMD,UAAW0B,KACpCxB,EAAAA,EAAAA,IAACoC,EAAAA,EAAa,OAItB,C","sources":["webpack://gparkkii-blog/./src/components/Detail/ContentBody.tsx","webpack://gparkkii-blog/./src/templates/post_template.tsx"],"sourcesContent":["import React from 'react';\nimport styled from '@emotion/styled';\nimport { mediaQuery } from 'theme/index';\nimport { GatsbyImage, IGatsbyImageData } from 'gatsby-plugin-image';\nimport { MarkdownRenderer } from './styles/code.styles';\n\ninterface ContentBodyProps {\n  html: string;\n  thumbnail: IGatsbyImageData;\n}\n\nconst ImageWrapper = styled.div`\n  margin: 0 auto;\n  margin-bottom: 40px;\n  border-radius: 20px;\n  overflow: hidden;\n  isolation: isolate;\n\n  ${mediaQuery.sm} {\n    margin-bottom: 20px;\n  }\n`;\n\nconst ContentBody = ({ thumbnail, html }: ContentBodyProps) => {\n  return (\n    <>\n      <ImageWrapper>\n        <GatsbyImage\n          style={{\n            height: '328px',\n            objectFit: 'contain',\n            borderRadius: '20px',\n          }}\n          loading=\"lazy\"\n          image={thumbnail}\n          alt=\"thumbnail\"\n        />\n      </ImageWrapper>\n      <MarkdownRenderer dangerouslySetInnerHTML={{ __html: html }} />\n    </>\n  );\n};\n\nexport default ContentBody;\n","import React, { FunctionComponent } from 'react';\nimport BaseLayout from 'layout/BaseLayout';\nimport PostLayout from 'layout/PostLayout';\nimport ContentHead from 'components/Detail/ContentHead';\nimport ContentBody from 'components/Detail/ContentBody';\nimport CommentWidget from 'components/Detail/CommentWidget';\nimport { PostPageItemType } from 'types/Post.types';\nimport { graphql } from 'gatsby';\n\ntype PostTemplateProps = {\n  path: string;\n  data: {\n    allMarkdownRemark: {\n      edges: PostPageItemType[];\n    };\n  };\n  pageContext: unknown;\n  location: {\n    href: string;\n  };\n};\n\nconst PostTemplate: FunctionComponent<PostTemplateProps> = function ({\n  path,\n  data,\n  pageContext,\n  location,\n}: PostTemplateProps) {\n  const {\n    node: {\n      html,\n      frontmatter: {\n        title,\n        summary,\n        date,\n        tags,\n        thumbnail: {\n          childImageSharp: { gatsbyImageData },\n          publicURL,\n        },\n      },\n    },\n  } = data.allMarkdownRemark.edges[0];\n\n  return (\n    <BaseLayout\n      path={'/'}\n      meta={{\n        title,\n        description: summary,\n        url: location.href,\n        image: publicURL,\n      }}\n    >\n      <PostLayout>\n        <ContentHead title={title} date={date} />\n        <ContentBody html={html} thumbnail={gatsbyImageData} />\n        <CommentWidget />\n      </PostLayout>\n    </BaseLayout>\n  );\n};\n\nexport default PostTemplate;\n\nexport const queryMarkdownDataBySlug = graphql`\n  query queryMarkdownDataBySlug($slug: String) {\n    allMarkdownRemark(filter: { fields: { slug: { eq: $slug } } }) {\n      edges {\n        node {\n          html\n          frontmatter {\n            title\n            summary\n            date(formatString: \"YYYY년 MM월 DD일 HH:mm\")\n            tags\n            thumbnail {\n              childImageSharp {\n                gatsbyImageData\n              }\n              publicURL\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n"],"names":["ImageWrapper","_styled","target","mediaQuery","_ref","thumbnail","html","___EmotionJSX","React","GatsbyImage","style","height","objectFit","borderRadius","loading","image","alt","MarkdownRenderer","dangerouslySetInnerHTML","__html","path","data","pageContext","location","node","frontmatter","title","summary","date","tags","childImageSharp","gatsbyImageData","publicURL","allMarkdownRemark","edges","BaseLayout","meta","description","url","href","PostLayout","ContentHead","ContentBody","CommentWidget"],"sourceRoot":""}