{"version":3,"file":"component---src-templates-post-template-tsx-718a9b5cc580217df305.js","mappings":"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","sources":["webpack://gparkkii-blog/./src/layout/BaseLayout.tsx","webpack://gparkkii-blog/./src/layout/PostLayout.tsx","webpack://gparkkii-blog/./src/components/Common/Avatar.tsx","webpack://gparkkii-blog/./src/components/Detail/AuthorInfo.tsx","webpack://gparkkii-blog/./src/components/Detail/ContentHead.tsx","webpack://gparkkii-blog/./src/components/Detail/ContentBody.tsx","webpack://gparkkii-blog/./src/components/Detail/CommentWidget.tsx","webpack://gparkkii-blog/./src/templates/post_template.tsx"],"sourcesContent":["import { Global, ThemeProvider } from '@emotion/react';\nimport styled from '@emotion/styled';\nimport React from 'react';\nimport { globalStyle } from 'styles';\nimport Footer from 'components/Navigation/Footer';\nimport Header from 'components/Navigation/Header';\nimport { theme } from 'theme/index';\nimport { mediaQuery } from 'theme/breakpoints';\nimport { Helmet } from 'react-helmet';\n\nconst Body = styled.main`\n  display: flex;\n  flex-direction: row;\n  align-items: flex-start;\n  justify-content: center;\n\n  max-width: 1200px;\n  width: 100%;\n  min-height: calc(100vh - 80px); // minus footer height\n  height: 100%;\n  padding: 0px 40px;\n  padding-top: 72px; // padding to header height\n  margin: 0 auto;\n  background-color: ${({ theme }) => theme.lightTheme.backgroundColor};\n  transition: all 0.5s ease-in-out;\n\n  ${mediaQuery.sm} {\n    padding: 40px 0px;\n    padding-top: 72px;\n  }\n`;\n\ntype BaseLayoutProps = {\n  path: string;\n  children: React.ReactNode;\n  meta?: {\n    title: string;\n    description: string;\n    image: string;\n    url: string;\n  };\n};\n\nconst INITIAL_META = {\n  title: 'gparkkii.log',\n  description: '프론트엔드 엔지니어 지파키의 테크 블로그',\n  image: '/static/profile-image.jpeg',\n  url: 'https://gparkkii.github.io/',\n};\n\nconst BaseLayout = ({ path, children, meta }: BaseLayoutProps) => {\n  return (\n    <ThemeProvider theme={theme}>\n      <Helmet>\n        <html lang=\"ko\" />\n        <title>{meta ? meta.title : INITIAL_META.title}</title>\n        <meta\n          name=\"description\"\n          content={meta ? meta.description : INITIAL_META.description}\n        />\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n        <meta httpEquiv=\"Content-Type\" content=\"text/html;charset=UTF-8\" />\n\n        <meta property=\"og:type\" content=\"website\" />\n        <meta\n          property=\"og:title\"\n          content={meta ? meta.title : INITIAL_META.title}\n        />\n        <meta\n          property=\"og:description\"\n          content={meta ? meta.description : INITIAL_META.description}\n        />\n        <meta\n          property=\"og:image\"\n          content={meta ? meta.image : INITIAL_META.image}\n        />\n        <meta property=\"og:url\" content={meta ? meta.url : INITIAL_META.url} />\n        <meta\n          property=\"og:site_name\"\n          content={meta ? meta.title : INITIAL_META.title}\n        />\n        <meta\n          name=\"google-site-verification\"\n          content=\"i1k9fAJNvByDpCtfnvLiC1aCfhuag46Ftm5CVnntwrI\"\n        />\n      </Helmet>\n      <Global styles={globalStyle} />\n      <Header path={path} />\n      <Body>{children}</Body>\n      <Footer />\n    </ThemeProvider>\n  );\n};\n\nexport default BaseLayout;\n","import styled from '@emotion/styled';\nimport React from 'react';\nimport { mediaQuery } from 'theme/breakpoints';\n\nconst PostWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  justify-content: flex-start;\n  max-width: 960px;\n  width: 100%;\n  height: 100%;\n  padding: 80px 0px;\n  transition: all 0.5s ease-in-out;\n  ${mediaQuery.sm} {\n    padding: 40px 24px;\n    padding-bottom: 60px;\n  }\n`;\n\nconst PostLayout = ({ children }: { children: React.ReactNode }) => {\n  return <PostWrapper>{children}</PostWrapper>;\n};\n\nexport default PostLayout;\n","import styled from '@emotion/styled';\nimport React from 'react';\nimport { StaticImage } from 'gatsby-plugin-image';\n\nconst Rounded = styled.div`\n  border-radius: 100px;\n  overflow: hidden;\n  isolation: isolate;\n`;\n\nconst Avatar = () => {\n  return (\n    <Rounded>\n      <StaticImage\n        style={{\n          width: '40px',\n          height: '40px',\n          borderRadius: '100px',\n          objectFit: 'contain',\n        }}\n        loading=\"lazy\"\n        src=\"../../images/g_avatar.png\"\n        alt=\"avatar\"\n      />\n    </Rounded>\n  );\n};\n\nexport default Avatar;\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport Avatar from '../Common/Avatar';\nimport { Body, Caption } from 'styles/typography';\nimport { theme } from 'theme/index';\n\nconst AuthorBox = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: flex-start;\n`;\nconst Info = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  justify-content: flex-start;\n  margin-left: 12px;\n`;\n\ninterface AuthorInfoProps {\n  date: string;\n  author: string;\n}\n\nconst AuthorInfo = ({ date, author }: AuthorInfoProps) => {\n  return (\n    <AuthorBox>\n      <Avatar />\n      <Info>\n        <Body\n          medium\n          textColor={theme.colors.dark[100]}\n          style={{ marginBottom: 2 }}\n        >\n          {author}\n        </Body>\n        <Caption textColor={theme.colors.light[500]}>{date}</Caption>\n      </Info>\n    </AuthorBox>\n  );\n};\n\nexport default AuthorInfo;\n","import styled from '@emotion/styled';\nimport React from 'react';\nimport { Headline2 } from 'styles/typography';\nimport AuthorInfo from './AuthorInfo';\nimport IconButton from '../Controls/IconButton';\nimport Tooltip from '../Controls/Tooltip';\n\nconst HeadWrapper = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  justify-content: flex-start;\n  padding-bottom: 20px;\n  margin-bottom: 20px;\n`;\n\nconst ToolBar = styled.div`\n  width: 100%;\n  margin-top: 20px;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nconst IconBox = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: flex-end;\n`;\n\nconst Margin = styled.div`\n  margin-right: 8px;\n`;\n\ninterface ContentHeadProps {\n  title: string;\n  date: string;\n}\n\nconst ContentHead = ({ title, date }: ContentHeadProps) => {\n  const copyToClipBoard = () => {\n    navigator.clipboard.writeText(window.location.href);\n  };\n\n  return (\n    <HeadWrapper>\n      <Headline2>{title}</Headline2>\n      <ToolBar>\n        {/* FIXME: redirect to about page */}\n        <a\n          href=\"https://github.com/gparkkii\"\n          target=\"_blank\"\n          rel=\"noopener norefferer\"\n        >\n          <AuthorInfo author=\"gparkkii\" date={date} />\n        </a>\n        <IconBox>\n          <Tooltip tip=\"준비중...\">\n            <IconButton\n              size=\"xs\"\n              icon=\"share\"\n              onClick={() => console.log('share!')}\n            />\n          </Tooltip>\n          <Margin />\n          <Tooltip width={108} tip=\"클립보드로 복사\">\n            <IconButton size=\"xs\" icon=\"link\" onClick={copyToClipBoard} />\n          </Tooltip>\n        </IconBox>\n      </ToolBar>\n    </HeadWrapper>\n  );\n};\n\nexport default ContentHead;\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport { mediaQuery } from '../../theme';\nimport { GatsbyImage, IGatsbyImageData } from 'gatsby-plugin-image';\n\ninterface ContentBodyProps {\n  html: string;\n  thumbnail: IGatsbyImageData;\n}\n\nconst ImageWrapper = styled.div`\n  margin: 0 auto;\n  margin-bottom: 40px;\n  border-radius: 20px;\n  overflow: hidden;\n  isolation: isolate;\n\n  ${mediaQuery.sm} {\n    margin-bottom: 20px;\n  }\n`;\n\nconst MarkdownRenderer = styled.div`\n  // Renderer Style\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  word-break: keep-all;\n\n  // Markdown Style\n  line-height: 1.75;\n  font-size: 16px;\n  font-weight: 400;\n  color: ${({ theme }) => theme.colors.bluegray[600]};\n\n  h1,\n  h2,\n  h3 {\n    margin-bottom: 16px;\n  }\n\n  * + h1 {\n    margin-top: 60px;\n  }\n  * + h2,\n  * + h3 {\n    margin-top: 40px;\n  }\n\n  h1 + h2,\n  h2 + h3 {\n    margin-top: 12px;\n  }\n\n  hr + h1,\n  hr + h2,\n  hr + h3 {\n    margin-top: 0;\n  }\n\n  // Adjust Heading Element Style\n  h1 {\n    ${({ theme }) => theme.fonts.type.heading1};\n    color: ${({ theme }) => theme.colors.bluegray[800]};\n    ${mediaQuery.sm} {\n      ${({ theme }) => theme.fonts.type.heading1mobile};\n    }\n  }\n  h2 {\n    font-size: 28px;\n    font-weight: 700;\n    color: ${({ theme }) => theme.colors.bluegray[800]};\n    ${mediaQuery.sm} {\n      font-size: 22px;\n    }\n  }\n  h3 {\n    font-size: 22px;\n    color: ${({ theme }) => theme.colors.bluegray[800]};\n    font-weight: 600;\n    ${mediaQuery.sm} {\n      ${({ theme }) => theme.fonts.type.title};\n      font-weight: 600;\n    }\n  }\n\n  // Apply Padding Attribute to All Elements\n  p {\n    margin: 8px 0;\n    font-weight: 400;\n    color: ${({ theme }) => theme.colors.bluegray[600]};\n  }\n  strong {\n    font-weight: 600;\n    color: ${({ theme }) => theme.colors.bluegray[800]};\n  }\n\n  // Adjust List Element Style\n  ol,\n  ul {\n    margin-top: 10px;\n    margin-left: 20px;\n    padding-left: 16px;\n    line-height: 2;\n  }\n  ol > li {\n    color: ${({ theme }) => theme.colors.bluegray[700]};\n    list-style: decimal;\n    padding-left: 2px;\n  }\n  ul > li {\n    color: ${({ theme }) => theme.colors.bluegray[700]};\n    list-style: disc;\n    ul > li {\n      list-style: circle;\n      ul > li {\n        list-style: square;\n        ul > li {\n          list-style: outside;\n        }\n      }\n    }\n  }\n\n  // Adjust Quotation Element Style\n  blockquote {\n    margin: 16px 0;\n    padding: 20px;\n    border-left: 4px solid ${({ theme }) => theme.colors.bluegray[300]};\n    background-color: ${({ theme }) => theme.colors.bluegray[50]};\n    & p {\n      margin: 0;\n      color: ${({ theme }) => theme.colors.bluegray[500]};\n    }\n  }\n\n  // Adjust Horizontal Rule style\n  hr {\n    border: 1px dashed ${({ theme }) => theme.colors.bluegray[150]};\n    margin: 60px 0;\n  }\n\n  // Adjust Link Element Style\n  a {\n    color: ${({ theme }) => theme.colors.secondary[600]};\n    font-weight: 500;\n\n    strong {\n      color: ${({ theme }) => theme.colors.secondary[600]};\n    }\n\n    :hover {\n      text-decoration: underline;\n      text-decoration-style: double;\n      color: ${({ theme }) => theme.colors.secondary[800]};\n    }\n  }\n\n  // Adjust Summary Element Style\n  summary {\n    margin: 16px 0px;\n    ::marker {\n      color: ${({ theme }) => theme.colors.primary[100]};\n    }\n    & strong {\n      padding: 2px;\n      :hover {\n        text-decoration: underline;\n        text-decoration-style: wavy;\n        text-decoration-color: ${({ theme }) => theme.colors.primary[100]};\n      }\n    }\n  }\n\n  // Adjust Table Element Style\n  table {\n    margin: 20px 0px;\n    border-collapse: separate;\n    border-spacing: 0;\n    border: 1px solid ${({ theme }) => theme.colors.bluegray[300]};\n  }\n\n  thead {\n    background-color: ${({ theme }) => theme.colors.bluegray[150]};\n    th {\n      border-right: 1px solid ${({ theme }) => theme.colors.bluegray[300]};\n      border-bottom: 1px solid ${({ theme }) => theme.colors.bluegray[300]};\n      padding: 16px;\n      font-weight: 500;\n      color: ${({ theme }) => theme.colors.bluegray[800]};\n    }\n  }\n\n  td {\n    border-bottom: 1px solid ${({ theme }) => theme.colors.bluegray[300]};\n    border-right: 1px solid ${({ theme }) => theme.colors.bluegray[300]};\n    padding: 16px;\n    font-weight: 400;\n    color: ${({ theme }) => theme.colors.bluegray[800]};\n  }\n  tr:last-child {\n    td {\n      border-bottom: 0px;\n    }\n  }\n\n  td:last-child,\n  th:last-child {\n    border-right: 0px;\n  }\n\n  // Adjust Code Style\n  pre[class*='language-'] {\n    margin: 20px 0;\n    padding: 16px 20px;\n    font-size: 15px;\n    border-radius: 8px;\n\n    ::-webkit-scrollbar-thumb {\n      background: rgba(255, 255, 255, 0.5);\n      border-radius: 3px;\n    }\n  }\n\n  code[class*='language-'],\n  pre[class*='language-'] {\n    tab-size: 2;\n  }\n\n  code[class*='language-text'] {\n    background-color: ${({ theme }) => theme.colors.primary[600]};\n    color: ${({ theme }) => theme.colors.primary.default};\n    border: 1.5px dashed ${({ theme }) => theme.colors.primary.default};\n    padding: 2px 4px;\n    margin: 0px 4px;\n    font-size: 14px;\n  }\n\n  pre > code[class*='language-text'] {\n    background-color: #2d2d2d;\n    border: 0px;\n    font-size: 15px;\n    color: ${({ theme }) => theme.colors.light[300]};\n  }\n`;\n\nconst ContentBody = ({ thumbnail, html }: ContentBodyProps) => {\n  return (\n    <>\n      <ImageWrapper>\n        <GatsbyImage\n          loading=\"lazy\"\n          style={{\n            height: '348px',\n            objectFit: 'contain',\n            borderRadius: '20px',\n          }}\n          image={thumbnail}\n          alt=\"thumbnail\"\n        />\n      </ImageWrapper>\n      <MarkdownRenderer dangerouslySetInnerHTML={{ __html: html }} />\n    </>\n  );\n};\n\nexport default ContentBody;\n","import styled from '@emotion/styled';\nimport React, { createRef, FunctionComponent, useEffect } from 'react';\n\nconst UtteranceBox = styled.div`\n  width: 100%;\n  margin-top: 60px;\n  border-top: 2px solid ${({ theme }) => theme.colors.bluegray[300]};\n  padding-top: 60px;\n  .utterances {\n    max-width: 960px;\n    width: 100%;\n  }\n`;\n\nconst src = 'https://utteranc.es/client.js';\nconst repo = 'gparkkii/gparkkii.github.io';\n\ntype UtterancesAttributesType = {\n  src: string;\n  repo: string;\n  'issue-term': string;\n  label: string;\n  theme: string;\n  crossorigin: string;\n  async: string;\n};\n\nconst CommentWidget: FunctionComponent = function () {\n  const element = createRef<HTMLDivElement>();\n\n  useEffect(() => {\n    if (element.current === null) return;\n\n    const utterances: HTMLScriptElement = document.createElement('script');\n\n    const attributes: UtterancesAttributesType = {\n      src,\n      repo,\n      'issue-term': 'pathname',\n      label: 'Comment',\n      theme: `github-light`,\n      crossorigin: 'anonymous',\n      async: 'true',\n    };\n\n    Object.entries(attributes).forEach(([key, value]) => {\n      utterances.setAttribute(key, value);\n    });\n\n    element.current.appendChild(utterances);\n  }, []);\n\n  return <UtteranceBox ref={element} />;\n};\n\nexport default CommentWidget;\n","import React, { FunctionComponent } from 'react';\nimport BaseLayout from 'layout/BaseLayout';\nimport PostLayout from 'layout/PostLayout';\nimport ContentHead from 'components/Detail/ContentHead';\nimport ContentBody from 'components/Detail/ContentBody';\nimport CommentWidget from 'components/Detail/CommentWidget';\nimport { graphql } from 'gatsby';\n\ntype PostTemplateProps = {\n  path: string;\n  data: {\n    allMarkdownRemark: {\n      edges: PostPageItemType[];\n    };\n  };\n  location: {\n    href: string;\n  };\n};\n\nconst PostTemplate: FunctionComponent<PostTemplateProps> = function ({\n  path,\n  data,\n  location,\n}: PostTemplateProps) {\n  const {\n    node: {\n      html,\n      frontmatter: {\n        title,\n        summary,\n        date,\n        tags,\n        thumbnail: {\n          childImageSharp: { gatsbyImageData },\n          publicURL,\n        },\n      },\n    },\n  } = data.allMarkdownRemark.edges[0];\n\n  return (\n    <BaseLayout\n      path={'/'}\n      meta={{\n        title,\n        description: summary,\n        url: location.href,\n        image: publicURL,\n      }}\n    >\n      <PostLayout>\n        <ContentHead title={title} date={date} thumbnail={gatsbyImageData} />\n        <ContentBody html={html} thumbnail={gatsbyImageData} />\n        <CommentWidget />\n      </PostLayout>\n    </BaseLayout>\n  );\n};\n\nexport default PostTemplate;\n\nexport const queryMarkdownDataBySlug = graphql`\n  query queryMarkdownDataBySlug($slug: String) {\n    allMarkdownRemark(filter: { fields: { slug: { eq: $slug } } }) {\n      edges {\n        node {\n          html\n          frontmatter {\n            title\n            summary\n            date(formatString: \"YYYY년 MM월 DD일 HH:mm\")\n            tags\n            thumbnail {\n              childImageSharp {\n                gatsbyImageData\n              }\n              publicURL\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n"],"names":["Body","_styled","target","_ref","theme","lightTheme","backgroundColor","mediaQuery","INITIAL_META","_ref2","path","children","meta","___EmotionJSX","ThemeProvider","Helmet","lang","title","name","content","description","httpEquiv","property","image","url","Global","styles","globalStyle","Header","Footer","PostWrapper","Rounded","Avatar","StaticImage","style","width","height","borderRadius","objectFit","loading","src","alt","__imageData","require","AuthorBox","Info","date","author","medium","textColor","marginBottom","Caption","HeadWrapper","ToolBar","IconBox","Margin","Headline2","href","rel","AuthorInfo","Tooltip","tip","IconButton","size","icon","onClick","console","log","copyToClipBoard","navigator","clipboard","writeText","window","location","ImageWrapper","MarkdownRenderer","colors","bluegray","fonts","type","heading1","_ref3","_ref4","heading1mobile","_ref5","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","_ref12","_ref13","_ref14","_ref15","_ref16","secondary","_ref17","_ref18","_ref19","primary","_ref20","_ref21","_ref22","_ref23","_ref24","_ref25","_ref26","_ref27","_ref28","_ref29","_ref30","default","_ref31","_ref32","light","_ref33","thumbnail","html","React","GatsbyImage","dangerouslySetInnerHTML","__html","UtteranceBox","element","createRef","useEffect","current","utterances","document","createElement","attributes","repo","label","crossorigin","async","Object","entries","forEach","key","value","setAttribute","appendChild","ref","data","node","frontmatter","summary","tags","childImageSharp","gatsbyImageData","publicURL","allMarkdownRemark","edges","BaseLayout","PostLayout","ContentHead","ContentBody","CommentWidget"],"sourceRoot":""}