{"version":3,"file":"component---src-pages-404-tsx-01fec8c72f970bff0da5.js","mappings":"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","sources":["webpack://gparkkii-blog/./src/components/Common/Animation.tsx","webpack://gparkkii-blog/./src/layout/BaseLayout.tsx","webpack://gparkkii-blog/./src/pages/404.tsx"],"sourcesContent":["import React, { useEffect, createRef } from 'react';\nimport lottie from 'lottie-web';\n\ninterface Props {\n  animation: unknown;\n  height?: number;\n  width?: number;\n  loop?: boolean;\n  autoplay?: boolean;\n}\n\nexport const Animations: React.FC<Props> = ({\n  animation,\n  height = 480,\n  width = 480,\n  loop = true,\n  autoplay = true,\n}) => {\n  const animationContainer = createRef<HTMLDivElement>();\n\n  useEffect(() => {\n    const anim = lottie.loadAnimation({\n      container: animationContainer.current,\n      renderer: 'svg',\n      loop,\n      autoplay,\n      animationData: animation,\n    });\n    return () => anim.destroy(); // optional clean up for unmounting\n  }, []);\n\n  return (\n    <div\n      style={{ height, width, objectFit: 'contain' }}\n      ref={animationContainer}\n    />\n  );\n};\n","import { Global, ThemeProvider } from '@emotion/react';\nimport styled from '@emotion/styled';\nimport React from 'react';\nimport { globalStyle } from 'styles';\nimport Footer from 'components/Navigation/Footer';\nimport Header from 'components/Navigation/Header';\nimport { theme } from 'theme/index';\nimport { mediaQuery } from 'theme/breakpoints';\nimport { Helmet } from 'react-helmet';\n\nconst Body = styled.main`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: flex-start;\n\n  max-width: 1200px;\n  width: 100%;\n  min-height: calc(100vh - 80px); // minus footer height\n  height: 100%;\n  padding: 0px 40px;\n  padding-top: 72px; // padding to header height\n  margin: 0 auto;\n  background-color: ${({ theme }) => theme.lightTheme.backgroundColor};\n  transition: all 0.5s ease-in-out;\n\n  ${mediaQuery.sm} {\n    padding: 40px 0px;\n    padding-top: 72px;\n  }\n`;\n\ntype BaseLayoutProps = {\n  path: string;\n  children: React.ReactNode;\n  meta?: {\n    title: string;\n    description: string;\n    image?: string;\n    url: string;\n  };\n};\n\nconst INITIAL_META = {\n  title: 'gparkkii.log',\n  description: '프론트엔드 엔지니어 지파키의 테크 블로그',\n  image: '/static/profile-image.png',\n  url: 'https://gparkkii.github.io/',\n};\n\nconst BaseLayout = ({ path, children, meta }: BaseLayoutProps) => {\n  return (\n    <ThemeProvider theme={theme}>\n      <Helmet>\n        <html lang=\"ko\" />\n        <title>{meta ? meta.title : INITIAL_META.title}</title>\n        <script\n          src=\"https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-XXXX\"\n          crossOrigin=\"anonymous\"\n          async\n        />\n        <meta\n          name=\"google-site-verification\"\n          content=\"i1k9fAJNvByDpCtfnvLiC1aCfhuag46Ftm5CVnntwrI\"\n        />\n        <meta\n          name=\"description\"\n          content={meta ? meta.description : INITIAL_META.description}\n        />\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n        <meta httpEquiv=\"Content-Type\" content=\"text/html;charset=UTF-8\" />\n\n        <meta property=\"og:type\" content=\"website\" />\n        <meta\n          property=\"og:title\"\n          content={meta ? meta.title : INITIAL_META.title}\n        />\n        <meta\n          property=\"og:description\"\n          content={meta ? meta.description : INITIAL_META.description}\n        />\n        <meta\n          property=\"og:image\"\n          content={meta?.image ? meta?.image : INITIAL_META.image}\n        />\n        <meta property=\"og:url\" content={meta ? meta.url : INITIAL_META.url} />\n        <meta\n          property=\"og:site_name\"\n          content={meta ? meta.title : INITIAL_META.title}\n        />\n      </Helmet>\n      <Global styles={globalStyle} />\n      <Header path={path} />\n      <Body>{children}</Body>\n      <Footer />\n    </ThemeProvider>\n  );\n};\n\nexport default BaseLayout;\n","import styled from '@emotion/styled';\nimport React from 'react';\nimport { useResponsive } from 'hooks/useResponsive';\nimport { Animations } from 'components/Common/Animation';\nimport { breakpoints, mediaQuery, theme } from 'theme/index';\nimport NotFoundLottie from 'assets/lotties/not-found.json';\nimport BaseLayout from 'layout/BaseLayout';\nimport { PATH } from 'routes/path';\nimport { Heading1, Title } from 'styles/typography';\nimport { Link } from 'gatsby';\n\nconst NotFoundWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding-top: 48px;\n`;\n\nconst Margin = styled.div`\n  margin-top: -120px;\n  margin-bottom: 12px;\n  ${mediaQuery.sm} {\n    margin-top: -40px;\n  }\n`;\n\nconst FlexBox = styled.div`\n  display: flex;\n  flex-direction: row;\n  .home {\n    font-weight: 600;\n  }\n  .home:hover {\n    text-decoration: underline;\n    text-decoration-style: wavy;\n  }\n  & h3 {\n    font-weight: 500;\n  }\n`;\n\nconst NotFound = () => {\n  const mobileSize = useResponsive(breakpoints.sm);\n  return (\n    <BaseLayout path={PATH[404]}>\n      <NotFoundWrapper>\n        <Animations\n          width={mobileSize ? 348 : 768}\n          height={mobileSize ? 248 : 468}\n          animation={NotFoundLottie}\n        />\n        <Margin>\n          <Heading1 textColor={theme.colors.bluegray[600]}>\n            해당 페이지를 찾을 수 없습니다.\n          </Heading1>\n        </Margin>\n        <FlexBox>\n          <Link to={PATH.index}>\n            <Title className=\"home\" textColor={theme.colors.primary[200]}>\n              홈으로\n            </Title>\n          </Link>\n          <Title textColor={theme.colors.bluegray[450]}>\n            &nbsp;이동하여 다시 시도해주세요.\n          </Title>\n        </FlexBox>\n      </NotFoundWrapper>\n    </BaseLayout>\n  );\n};\n\nexport default NotFound;\n"],"names":["Animations","_ref","animation","height","width","loop","autoplay","animationContainer","createRef","useEffect","anim","lottie","container","current","renderer","animationData","destroy","___EmotionJSX","style","objectFit","ref","Body","_styled","target","theme","lightTheme","backgroundColor","mediaQuery","INITIAL_META","_ref2","path","children","meta","ThemeProvider","Helmet","lang","title","src","crossOrigin","async","name","content","description","httpEquiv","property","image","url","Global","styles","globalStyle","Header","Footer","NotFoundWrapper","Margin","FlexBox","NotFound","mobileSize","useResponsive","breakpoints","BaseLayout","PATH","NotFoundLottie","Heading1","textColor","Link","to","Title","className"],"sourceRoot":""}