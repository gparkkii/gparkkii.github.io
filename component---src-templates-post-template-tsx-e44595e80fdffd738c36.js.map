{"version":3,"file":"component---src-templates-post-template-tsx-e44595e80fdffd738c36.js","mappings":"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","sources":["webpack://gparkkii-blog/./src/layout/PostLayout.tsx","webpack://gparkkii-blog/./src/components/Common/Avatar.tsx","webpack://gparkkii-blog/./src/components/Detail/AuthorInfo.tsx","webpack://gparkkii-blog/./src/components/Detail/ContentHead.tsx","webpack://gparkkii-blog/./src/components/Detail/ContentBody.tsx","webpack://gparkkii-blog/./src/components/Detail/CommentWidget.tsx","webpack://gparkkii-blog/./src/templates/post_template.tsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport React from 'react';\nimport { mediaQuery } from 'theme/breakpoints';\n\nconst PostWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  justify-content: flex-start;\n  max-width: 960px;\n  width: 100%;\n  height: 100%;\n  padding: 80px 0px;\n  ${mediaQuery.sm} {\n    padding: 40px 16px;\n    padding-bottom: 60px;\n  }\n`;\n\nconst PostLayout = ({ children }: { children: React.ReactNode }) => {\n  return <PostWrapper>{children}</PostWrapper>;\n};\n\nexport default PostLayout;\n","import styled from '@emotion/styled';\nimport React from 'react';\nimport { StaticImage } from 'gatsby-plugin-image';\n\nconst Rounded = styled.div`\n  border-radius: 100px;\n  overflow: hidden;\n  isolation: isolate;\n`;\n\nconst Avatar = () => {\n  return (\n    <Rounded>\n      <StaticImage\n        style={{\n          width: '40px',\n          height: '40px',\n          borderRadius: '100px',\n          objectFit: 'contain',\n        }}\n        loading=\"lazy\"\n        src=\"../../assets/images/g_avatar.png\"\n        alt=\"avatar\"\n      />\n    </Rounded>\n  );\n};\n\nexport default Avatar;\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport Avatar from '../Common/Avatar';\nimport { Body, Caption } from 'styles/typography';\nimport { theme } from 'theme/index';\n\nconst AuthorBox = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: flex-start;\n`;\nconst Info = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  justify-content: flex-start;\n  margin-left: 12px;\n`;\n\ninterface AuthorInfoProps {\n  date: string;\n  author: string;\n}\n\nconst AuthorInfo = ({ date, author }: AuthorInfoProps) => {\n  return (\n    <AuthorBox>\n      <Avatar />\n      <Info>\n        <Body\n          medium\n          textColor={theme.colors.dark[100]}\n          style={{ marginBottom: 2 }}\n        >\n          {author}\n        </Body>\n        <Caption textColor={theme.colors.light[500]}>{date}</Caption>\n      </Info>\n    </AuthorBox>\n  );\n};\n\nexport default AuthorInfo;\n","import styled from '@emotion/styled';\nimport React from 'react';\nimport { Headline2 } from 'styles/typography';\nimport AuthorInfo from './AuthorInfo';\nimport IconButton from '../Controls/IconButton';\nimport Tooltip from '../Controls/Tooltip';\n\nconst HeadWrapper = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  justify-content: flex-start;\n  padding-bottom: 20px;\n  margin-bottom: 20px;\n`;\n\nconst ToolBar = styled.div`\n  width: 100%;\n  margin-top: 20px;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nconst IconBox = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: flex-end;\n`;\n\nconst Margin = styled.div`\n  margin-right: 8px;\n`;\n\ninterface ContentHeadProps {\n  title: string;\n  date: string;\n}\n\nconst ContentHead = ({ title, date }: ContentHeadProps) => {\n  const copyToClipBoard = () => {\n    navigator.clipboard.writeText(window.location.href);\n  };\n\n  return (\n    <HeadWrapper>\n      <Headline2>{title}</Headline2>\n      <ToolBar>\n        {/* FIXME: redirect to about page */}\n        <a\n          href=\"https://github.com/gparkkii\"\n          target=\"_blank\"\n          rel=\"noopener norefferer\"\n        >\n          <AuthorInfo author=\"gparkkii\" date={date} />\n        </a>\n        <IconBox>\n          <Tooltip tip=\"준비중...\">\n            <IconButton\n              size=\"xs\"\n              icon=\"share\"\n              onClick={() => console.log('share!')}\n            />\n          </Tooltip>\n          <Margin />\n          <Tooltip tip=\"클립보드로 복사\">\n            <IconButton size=\"xs\" icon=\"link\" onClick={copyToClipBoard} />\n          </Tooltip>\n        </IconBox>\n      </ToolBar>\n    </HeadWrapper>\n  );\n};\n\nexport default ContentHead;\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport { mediaQuery } from '../../theme';\nimport { GatsbyImage, IGatsbyImageData } from 'gatsby-plugin-image';\n\ninterface ContentBodyProps {\n  html: string;\n  thumbnail: IGatsbyImageData;\n}\n\nconst ImageWrapper = styled.div`\n  margin: 0 auto;\n  margin-bottom: 40px;\n  border-radius: 20px;\n  overflow: hidden;\n  isolation: isolate;\n\n  ${mediaQuery.sm} {\n    margin-bottom: 20px;\n  }\n`;\n\nconst MarkdownRenderer = styled.div`\n  // Renderer Style\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  word-break: keep-all;\n\n  // Markdown Style\n  line-height: 1.8;\n  font-size: 16px;\n  font-weight: 400;\n  color: ${({ theme }) => theme.colors.bluegray[600]};\n\n  h1,\n  h2,\n  h3 {\n    margin-bottom: 16px;\n  }\n\n  * + h1 {\n    margin-top: 60px;\n  }\n  * + h2,\n  * + h3 {\n    margin-top: 40px;\n  }\n\n  h1 + h2,\n  h2 + h3 {\n    margin-top: 12px;\n  }\n\n  hr + h1,\n  hr + h2,\n  hr + h3 {\n    margin-top: 0;\n  }\n\n  // Adjust Heading Element Style\n  h1 {\n    ${({ theme }) => theme.fonts.type.heading1};\n    color: ${({ theme }) => theme.colors.bluegray[800]};\n    ${mediaQuery.sm} {\n      ${({ theme }) => theme.fonts.type.heading1mobile};\n    }\n  }\n  h2 {\n    font-size: 28px;\n    font-weight: 700;\n    color: ${({ theme }) => theme.colors.bluegray[800]};\n    ${mediaQuery.sm} {\n      font-size: 22px;\n    }\n  }\n  h3 {\n    font-size: 22px;\n    color: ${({ theme }) => theme.colors.bluegray[800]};\n    font-weight: 600;\n    ${mediaQuery.sm} {\n      ${({ theme }) => theme.fonts.type.title};\n      font-weight: 600;\n    }\n  }\n\n  // Apply Padding Attribute to All Elements\n  p {\n    margin: 8px 0;\n    font-weight: 400;\n    color: ${({ theme }) => theme.colors.bluegray[600]};\n  }\n  strong {\n    font-weight: 600;\n    color: ${({ theme }) => theme.colors.bluegray[800]};\n  }\n\n  // Adjust List Element Style\n  ol,\n  ul {\n    margin-top: 10px;\n    margin-left: 20px;\n    padding-left: 16px;\n    line-height: 2;\n  }\n  ol > li {\n    color: ${({ theme }) => theme.colors.bluegray[700]};\n    list-style: decimal;\n    padding-left: 2px;\n  }\n  ul > li {\n    color: ${({ theme }) => theme.colors.bluegray[700]};\n    list-style: disc;\n    ul > li {\n      list-style: circle;\n      ul > li {\n        list-style: square;\n        ul > li {\n          list-style: outside;\n        }\n      }\n    }\n  }\n\n  // Adjust Quotation Element Style\n  blockquote {\n    margin: 16px 0;\n    padding: 20px;\n    border-left: 4px solid ${({ theme }) => theme.colors.bluegray[300]};\n    background-color: ${({ theme }) => theme.colors.bluegray[50]};\n    & p {\n      margin: 0;\n      color: ${({ theme }) => theme.colors.bluegray[500]};\n    }\n  }\n\n  // Adjust Horizontal Rule style\n  hr {\n    border: 1px dashed ${({ theme }) => theme.colors.bluegray[150]};\n    margin: 60px 0;\n  }\n\n  // Adjust Link Element Style\n  a {\n    color: ${({ theme }) => theme.colors.secondary[600]};\n    font-weight: 500;\n\n    strong {\n      color: ${({ theme }) => theme.colors.secondary[600]};\n    }\n\n    :hover {\n      text-decoration: underline;\n      text-decoration-style: double;\n      color: ${({ theme }) => theme.colors.secondary[800]};\n    }\n  }\n\n  // Adjust Summary Element Style\n  summary {\n    margin: 16px 0px;\n    ::marker {\n      color: ${({ theme }) => theme.colors.primary[100]};\n    }\n    & strong {\n      padding: 2px;\n      :hover {\n        text-decoration: underline;\n        text-decoration-style: wavy;\n        text-decoration-color: ${({ theme }) => theme.colors.primary[100]};\n      }\n    }\n  }\n\n  // Adjust Table Element Style\n  table {\n    margin: 20px 0px;\n    border-collapse: separate;\n    border-spacing: 0;\n    border: 1px solid ${({ theme }) => theme.colors.bluegray[300]};\n  }\n\n  thead {\n    background-color: ${({ theme }) => theme.colors.bluegray[150]};\n    th {\n      border-right: 1px solid ${({ theme }) => theme.colors.bluegray[300]};\n      border-bottom: 1px solid ${({ theme }) => theme.colors.bluegray[300]};\n      padding: 16px;\n      font-weight: 500;\n      color: ${({ theme }) => theme.colors.bluegray[800]};\n    }\n  }\n\n  td {\n    border-bottom: 1px solid ${({ theme }) => theme.colors.bluegray[300]};\n    border-right: 1px solid ${({ theme }) => theme.colors.bluegray[300]};\n    padding: 16px;\n    font-weight: 400;\n    color: ${({ theme }) => theme.colors.bluegray[800]};\n  }\n  tr:last-child {\n    td {\n      border-bottom: 0px;\n    }\n  }\n\n  td:last-child,\n  th:last-child {\n    border-right: 0px;\n  }\n\n  // Adjust Code Style\n  pre[class*='language-'] {\n    margin: 20px 0;\n    padding: 16px 20px;\n    font-size: 15px;\n    border-radius: 8px;\n\n    ::-webkit-scrollbar-thumb {\n      background: rgba(255, 255, 255, 0.5);\n      border-radius: 3px;\n    }\n  }\n\n  code[class*='language-'],\n  pre[class*='language-'] {\n    tab-size: 2;\n  }\n\n  code[class*='language-text'] {\n    background-color: ${({ theme }) => theme.colors.primary[600]};\n    color: ${({ theme }) => theme.colors.primary.default};\n    border: 1.5px dashed ${({ theme }) => theme.colors.primary.default};\n    padding: 2px 4px;\n    margin: 0px 4px;\n    font-size: 14px;\n  }\n\n  pre > code[class*='language-text'] {\n    background-color: #2d2d2d;\n    border: 0px;\n    font-size: 15px;\n    color: ${({ theme }) => theme.colors.light[300]};\n  }\n`;\n\nconst ContentBody = ({ thumbnail, html }: ContentBodyProps) => {\n  return (\n    <>\n      <ImageWrapper>\n        <GatsbyImage\n          style={{\n            height: '348px',\n            objectFit: 'contain',\n            borderRadius: '20px',\n          }}\n          loading=\"lazy\"\n          image={thumbnail}\n          alt=\"thumbnail\"\n        />\n      </ImageWrapper>\n      <MarkdownRenderer dangerouslySetInnerHTML={{ __html: html }} />\n    </>\n  );\n};\n\nexport default ContentBody;\n","import styled from '@emotion/styled';\nimport React, { createRef, FunctionComponent, useEffect } from 'react';\n\nconst UtteranceBox = styled.div`\n  width: 100%;\n  margin-top: 60px;\n  border-top: 2px solid ${({ theme }) => theme.colors.bluegray[300]};\n  padding-top: 60px;\n  .utterances {\n    max-width: 960px;\n    width: 100%;\n  }\n`;\n\nconst src = 'https://utteranc.es/client.js';\nconst repo = 'gparkkii/gparkkii.github.io';\n\ntype UtterancesAttributesType = {\n  src: string;\n  repo: string;\n  'issue-term': string;\n  label: string;\n  theme: string;\n  crossorigin: string;\n  async: string;\n};\n\nconst CommentWidget: FunctionComponent = function () {\n  const element = createRef<HTMLDivElement>();\n\n  useEffect(() => {\n    if (element.current === null) return;\n\n    const utterances: HTMLScriptElement = document.createElement('script');\n\n    const attributes: UtterancesAttributesType = {\n      src,\n      repo,\n      'issue-term': 'pathname',\n      label: 'Comment',\n      theme: `github-light`,\n      crossorigin: 'anonymous',\n      async: 'true',\n    };\n\n    Object.entries(attributes).forEach(([key, value]) => {\n      utterances.setAttribute(key, value);\n    });\n\n    element.current.appendChild(utterances);\n  }, []);\n\n  return <UtteranceBox ref={element} />;\n};\n\nexport default CommentWidget;\n","import React, { FunctionComponent } from 'react';\nimport BaseLayout from 'layout/BaseLayout';\nimport PostLayout from 'layout/PostLayout';\nimport ContentHead from 'components/Detail/ContentHead';\nimport ContentBody from 'components/Detail/ContentBody';\nimport CommentWidget from 'components/Detail/CommentWidget';\nimport { graphql } from 'gatsby';\n\ntype PostTemplateProps = {\n  path: string;\n  data: {\n    allMarkdownRemark: {\n      edges: PostPageItemType[];\n    };\n  };\n  location: {\n    href: string;\n  };\n};\n\nconst PostTemplate: FunctionComponent<PostTemplateProps> = function ({\n  path,\n  data,\n  location,\n}: PostTemplateProps) {\n  const {\n    node: {\n      html,\n      frontmatter: {\n        title,\n        summary,\n        date,\n        tags,\n        thumbnail: {\n          childImageSharp: { gatsbyImageData },\n          publicURL,\n        },\n      },\n    },\n  } = data.allMarkdownRemark.edges[0];\n\n  return (\n    <BaseLayout\n      path={'/'}\n      meta={{\n        title,\n        description: summary,\n        url: location.href,\n        image: publicURL,\n      }}\n    >\n      <PostLayout>\n        <ContentHead title={title} date={date} thumbnail={gatsbyImageData} />\n        <ContentBody html={html} thumbnail={gatsbyImageData} />\n        <CommentWidget />\n      </PostLayout>\n    </BaseLayout>\n  );\n};\n\nexport default PostTemplate;\n\nexport const queryMarkdownDataBySlug = graphql`\n  query queryMarkdownDataBySlug($slug: String) {\n    allMarkdownRemark(filter: { fields: { slug: { eq: $slug } } }) {\n      edges {\n        node {\n          html\n          frontmatter {\n            title\n            summary\n            date(formatString: \"YYYY년 MM월 DD일 HH:mm\")\n            tags\n            thumbnail {\n              childImageSharp {\n                gatsbyImageData\n              }\n              publicURL\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n"],"names":["PostWrapper","_styled","target","mediaQuery","_ref","children","___EmotionJSX","Rounded","name","styles","Avatar","StaticImage","style","width","height","borderRadius","objectFit","loading","src","alt","__imageData","require","AuthorBox","Info","date","author","Body","medium","textColor","theme","marginBottom","Caption","HeadWrapper","ToolBar","IconBox","Margin","title","Headline2","href","rel","AuthorInfo","Tooltip","tip","IconButton","size","icon","onClick","console","log","copyToClipBoard","navigator","clipboard","writeText","window","location","ImageWrapper","MarkdownRenderer","colors","bluegray","_ref2","fonts","type","heading1","_ref3","_ref4","heading1mobile","_ref5","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","_ref12","_ref13","_ref14","_ref15","_ref16","secondary","_ref17","_ref18","_ref19","primary","_ref20","_ref21","_ref22","_ref23","_ref24","_ref25","_ref26","_ref27","_ref28","_ref29","_ref30","default","_ref31","_ref32","light","_ref33","thumbnail","html","React","GatsbyImage","image","dangerouslySetInnerHTML","__html","UtteranceBox","element","createRef","useEffect","current","utterances","document","createElement","attributes","repo","label","crossorigin","async","Object","entries","forEach","key","value","setAttribute","appendChild","ref","path","data","node","frontmatter","summary","tags","childImageSharp","gatsbyImageData","publicURL","allMarkdownRemark","edges","BaseLayout","meta","description","url","PostLayout","ContentHead","ContentBody","CommentWidget"],"sourceRoot":""}