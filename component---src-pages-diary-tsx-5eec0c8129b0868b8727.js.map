{"version":3,"file":"component---src-pages-diary-tsx-5eec0c8129b0868b8727.js","mappings":"iPAYA,MAAMA,GAAYC,EAAAA,EAAAA,GAAA,OAAAC,OAAA,YAAAD,CAAA,4HAMWE,IAAA,IAAC,MAAEC,GAAOD,EAAA,OAAKC,EAAMC,OAAOC,MAAM,IAAI,mHAQ3CC,GAASA,EAAMH,MAAMC,OAAOG,QAAQ,MAAI,4CAMjDC,IAAA,IAAC,MAAEL,GAAOK,EAAA,OAAKL,EAAMC,OAAOG,QAAQE,OAAO,2CAUpDC,GAAMV,EAAAA,EAAAA,GAAA,OAAAC,OAAA,YAAAD,CAAA,CAAAW,KAAA,SAAAC,OAAA,sBAINC,GAAeb,EAAAA,EAAAA,GAAA,OAAAC,OAAA,YAAAD,CAAA,CAAAW,KAAA,QAAAC,OAAA,oGAiCrB,MAtBkBE,IAAwC,IAAvC,KAAEC,EAAI,QAAEC,GAAyBF,EAClD,OACEG,EAAAA,EAAAA,IAACC,EAAAA,KAAI,CAACC,GAAIJ,IACRE,EAAAA,EAAAA,IAAClB,EAAY,MACXkB,EAAAA,EAAAA,IAACJ,EAAe,MACdI,EAAAA,EAAAA,IAACG,EAAAA,GAAS,KACPJ,EAAQK,MAAQ,GAAE,IAAOL,EAAQK,MAAK,IAAML,EAAQK,SAGzDJ,EAAAA,EAAAA,IAAA,YACEA,EAAAA,EAAAA,IAACP,EAAM,MACLO,EAAAA,EAAAA,IAACK,EAAAA,GAAK,CAACC,MAAO,CAAEC,WAAY,MAAQR,EAAQS,SAE9CR,EAAAA,EAAAA,IAACS,EAAAA,GAAO,CAACC,UAAWxB,EAAAA,GAAAA,OAAAA,KAAAA,MACjBa,EAAQY,WAIV,EC/DX,MAAM7B,GAAYC,EAAAA,EAAAA,GAAA,OAAAC,OAAA,YAAAD,CAAA,CAAAW,KAAA,SAAAC,OAAA,4CAMZiB,GAAS7B,EAAAA,EAAAA,GAAA,OAAAC,OAAA,YAAAD,CAAA,4EAIcE,IAAA,IAAC,MAAEC,GAAOD,EAAA,OAAKC,EAAMC,OAAO0B,KAAK,GAAG,2BAG3DpB,GAAMV,EAAAA,EAAAA,GAAA,OAAAC,OAAA,YAAAD,CAAA,CAAAW,KAAA,UAAAC,OAAA,mBAoEZ,MA3CkBJ,IAQI,IAPpBuB,MACEC,MACEC,cAAc,MAAER,EAAK,YAAES,EAAW,QAAEC,IAEtCC,mBAAmB,MAAEC,GACrBC,MAAM,UAAEC,KAEK/B,EACf,OACES,EAAAA,EAAAA,IAACuB,EAAAA,EAAU,CACTC,KAAMC,EAAAA,EAAAA,MACNC,KAAM,CACJlB,QACAS,cACAU,IAAKT,EACLU,MAAON,KAGTtB,EAAAA,EAAAA,IAAClB,EAAY,MACXkB,EAAAA,EAAAA,IAACY,EAAS,MACRZ,EAAAA,EAAAA,IAAC6B,EAAAA,GAAS,KAAC,gBACX7B,EAAAA,EAAAA,IAACP,EAAM,OACPO,EAAAA,EAAAA,IAACS,EAAAA,GAAO,CAACC,UAAWxB,EAAAA,GAAAA,OAAAA,KAAAA,MAAwB,yBAI7CkC,EAAMU,OAAS,EACdV,EAAMW,KAAI,CAAAlC,EAAoCO,KAAK,IAAtC4B,MAAM,OAAEC,EAAM,YAAEC,IAAerC,EAAA,OAC1CG,EAAAA,EAAAA,IAACmC,EAAS,CACRC,IAAQhC,EAAK,IAAI8B,EAAY1B,MAC7BV,KAAMmC,EAAOnC,KACbC,QAASmC,GACT,KAGJlC,EAAAA,EAAAA,IAACqC,EAAAA,EAAS,OAGH,C","sources":["webpack://gparkkii-blog/./src/components/Diary/DiaryCard.tsx","webpack://gparkkii-blog/./src/pages/diary.tsx"],"sourcesContent":["import React from 'react';\nimport { DiaryFrontMatterType } from '../../@types/Post.types';\nimport styled from '@emotion/styled';\nimport { Headline2, Summary, Title } from 'styles/typography';\nimport { theme } from 'theme/index';\nimport { Link } from 'gatsby';\n\ninterface DiaryCardProps {\n  slug: string;\n  content: DiaryFrontMatterType;\n}\n\nconst DiaryWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: flex-start;\n  padding: 24px 16px;\n  border-bottom: 1px solid ${({ theme }) => theme.colors.light[100]};\n  & h1::after {\n    display: block;\n    content: '';\n    width: 0;\n    height: 2px;\n    margin-bottom: 3px;\n    margin-top: -5px;\n    background-color: ${props => props.theme.colors.primary[300]};\n    transition: width 0.3s;\n  }\n\n  :hover {\n    h1 {\n      color: ${({ theme }) => theme.colors.primary.default};\n    }\n    &:hover {\n      & h1::after {\n        width: 100%;\n      }\n    }\n  }\n`;\n\nconst Margin = styled.div`\n  margin-bottom: 8px;\n`;\n\nconst HeadlineWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  width: 80px;\n  height: 80px;\n\n  margin-right: 24px;\n`;\n\nconst DiaryCard = ({ slug, content }: DiaryCardProps) => {\n  return (\n    <Link to={slug}>\n      <DiaryWrapper>\n        <HeadlineWrapper>\n          <Headline2>\n            {content.index < 10 ? `0${content.index}.` : content.index}\n          </Headline2>\n        </HeadlineWrapper>\n        <div>\n          <Margin>\n            <Title style={{ fontWeight: 600 }}>{content.title}</Title>\n          </Margin>\n          <Summary textColor={theme.colors.dark[100]}>\n            {content.summary}\n          </Summary>\n        </div>\n      </DiaryWrapper>\n    </Link>\n  );\n};\n\nexport default DiaryCard;\n","import React from 'react';\nimport BaseLayout from '../layout/BaseLayout';\nimport { PATH } from '../routes/path';\nimport { Guidance2, Summary } from '../styles/typography';\nimport styled from '@emotion/styled';\nimport { theme } from '../theme';\nimport { graphql } from 'gatsby';\nimport NoContent from '../components/Common/NoContent';\nimport DiaryCard from '../components/Diary/DiaryCard';\nimport { DiaryType } from '../@types/Post.types';\nimport { IGatsbyImageData } from 'gatsby-plugin-image';\n\nconst DiaryWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  padding: 60px 0px;\n`;\n\nconst DiaryHead = styled.div`\n  width: 100%;\n  padding: 0px 16px;\n  padding-bottom: 40px;\n  border-bottom: 2px solid ${({ theme }) => theme.colors.dark[50]};\n  margin-bottom: 40px;\n`;\nconst Margin = styled.div`\n  margin-top: 4px;\n`;\n\ntype DiaryPageProps = {\n  data: {\n    site: {\n      siteMetadata: {\n        title: string;\n        description: string;\n        siteUrl: string;\n      };\n    };\n    allMarkdownRemark: {\n      edges: DiaryType[];\n    };\n    file: {\n      childImageSharp: {\n        gatsbyImageData: IGatsbyImageData;\n      };\n      publicURL: string;\n    };\n  };\n};\n\nconst DiaryPage = ({\n  data: {\n    site: {\n      siteMetadata: { title, description, siteUrl },\n    },\n    allMarkdownRemark: { edges },\n    file: { publicURL },\n  },\n}: DiaryPageProps) => {\n  return (\n    <BaseLayout\n      path={PATH.diary}\n      meta={{\n        title,\n        description,\n        url: siteUrl,\n        image: publicURL,\n      }}\n    >\n      <DiaryWrapper>\n        <DiaryHead>\n          <Guidance2>Short Diary</Guidance2>\n          <Margin />\n          <Summary textColor={theme.colors.dark[100]}>\n            끄적끄적 내맘대로 적는 일상과 회고록\n          </Summary>\n        </DiaryHead>\n        {edges.length > 0 ? (\n          edges.map(({ node: { fields, frontmatter } }, index) => (\n            <DiaryCard\n              key={`${index}_${frontmatter.title}`}\n              slug={fields.slug}\n              content={frontmatter}\n            />\n          ))\n        ) : (\n          <NoContent />\n        )}\n      </DiaryWrapper>\n    </BaseLayout>\n  );\n};\n\nexport default DiaryPage;\n\nexport const diaryContent = graphql`\n  query diaryContent {\n    site {\n      siteMetadata {\n        title\n        description\n        siteUrl\n      }\n    }\n    allMarkdownRemark(\n      sort: [{ frontmatter: { date: DESC } }, { frontmatter: { title: ASC } }]\n      filter: { frontmatter: { tags: { eq: null }, update: { eq: true } } }\n    ) {\n      edges {\n        node {\n          id\n          fields {\n            slug\n          }\n          frontmatter {\n            update\n            title\n            index\n            summary\n            date(formatString: \"YYYY.MM.DD\")\n          }\n        }\n      }\n    }\n    file(name: { eq: \"profile-image\" }) {\n      childImageSharp {\n        gatsbyImageData(width: 120, height: 120)\n      }\n      publicURL\n    }\n  }\n`;\n"],"names":["DiaryWrapper","_styled","target","_ref","theme","colors","light","props","primary","_ref2","default","Margin","name","styles","HeadlineWrapper","_ref3","slug","content","___EmotionJSX","Link","to","Headline2","index","Title","style","fontWeight","title","Summary","textColor","summary","DiaryHead","dark","data","site","siteMetadata","description","siteUrl","allMarkdownRemark","edges","file","publicURL","BaseLayout","path","PATH","meta","url","image","Guidance2","length","map","node","fields","frontmatter","DiaryCard","key","NoContent"],"sourceRoot":""}